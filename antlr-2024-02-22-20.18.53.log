2024-02-22 20:18:52:518 grammar LogManager.java:25 before: (COMBINED_GRAMMAR CodeFile (RULES (RULE start (BLOCK (ALT INSERT CODE '{' content '}'))) (RULE content (BLOCK (ALT (* (BLOCK (ALT declaraciones)))))) (RULE declaraciones (BLOCK (ALT tipo ID SEMI) (ALT tipo ID_invalido SEMI))) (RULE tipo (BLOCK (ALT 'margit') (ALT 'radahn') (ALT 'godrick'))) (RULE INSERT (BLOCK (ALT 'iniciar'))) (RULE CODE (BLOCK (ALT 'codigo'))) (RULE ID (BLOCK (ALT (+ (BLOCK (ALT [a-zA-Z])))))) (RULE ID_invalido (BLOCK (ALT [a-zA-Z_0-9\-+] (* (BLOCK (ALT [a-zA-Z0-9_\-+])))))) (RULE SEMI (BLOCK (ALT ';'))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n])))) skip)))))
2024-02-22 20:18:52:554 grammar LogManager.java:25 after: (COMBINED_GRAMMAR CodeFile (RULES (RULE start (BLOCK (ALT INSERT CODE '{' content '}'))) (RULE content (BLOCK (ALT (* (BLOCK (ALT declaraciones)))))) (RULE declaraciones (BLOCK (ALT tipo ID SEMI) (ALT tipo ID_invalido SEMI))) (RULE tipo (BLOCK (ALT (SET 'margit' 'radahn' 'godrick')))) (RULE INSERT (BLOCK (ALT 'iniciar'))) (RULE CODE (BLOCK (ALT 'codigo'))) (RULE ID (BLOCK (ALT (+ (BLOCK (ALT [a-zA-Z])))))) (RULE ID_invalido (BLOCK (ALT [a-zA-Z_0-9\-+] (* (BLOCK (ALT [a-zA-Z0-9_\-+])))))) (RULE SEMI (BLOCK (ALT ';'))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n])))) skip)))))
2024-02-22 20:18:52:658 grammar LogManager.java:25 after extract implicit lexer =(COMBINED_GRAMMAR CodeFile (RULES (RULE start (BLOCK (ALT INSERT CODE '{' content '}'))) (RULE content (BLOCK (ALT (* (BLOCK (ALT declaraciones)))))) (RULE declaraciones (BLOCK (ALT tipo ID SEMI) (ALT tipo ID_invalido SEMI))) (RULE tipo (BLOCK (ALT (SET 'margit' 'radahn' 'godrick'))))))
2024-02-22 20:18:52:659 grammar LogManager.java:25 lexer =(LEXER_GRAMMAR CodeFileLexer (RULES (RULE T__0 (BLOCK (ALT '{'))) (RULE T__1 (BLOCK (ALT '}'))) (RULE T__2 (BLOCK (ALT 'margit'))) (RULE T__3 (BLOCK (ALT 'radahn'))) (RULE T__4 (BLOCK (ALT 'godrick'))) (RULE INSERT (BLOCK (ALT 'iniciar'))) (RULE CODE (BLOCK (ALT 'codigo'))) (RULE ID (BLOCK (ALT (+ (BLOCK (ALT [a-zA-Z])))))) (RULE ID_invalido (BLOCK (ALT [a-zA-Z_0-9\-+] (* (BLOCK (ALT [a-zA-Z0-9_\-+])))))) (RULE SEMI (BLOCK (ALT ';'))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n])))) skip)))))
2024-02-22 20:18:53:169 semantics LogManager.java:25 tokens={EOF=-1, T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, INSERT=6, CODE=7, ID=8, ID_invalido=9, SEMI=10, WS=11}
2024-02-22 20:18:53:169 semantics LogManager.java:25 strings={'{'=1, '}'=2, 'margit'=3, 'radahn'=4, 'godrick'=5, 'iniciar'=6, 'codigo'=7, ';'=10}
2024-02-22 20:18:53:174 LL1 LogManager.java:25 
DECISION 0 in rule content
2024-02-22 20:18:53:174 LL1 LogManager.java:25 look=[{3..5}, 2]
2024-02-22 20:18:53:177 LL1 LogManager.java:25 LL(1)? true
2024-02-22 20:18:53:177 LL1 LogManager.java:25 
DECISION 1 in rule declaraciones
2024-02-22 20:18:53:177 LL1 LogManager.java:25 look=[{3..5}, {3..5}]
2024-02-22 20:18:53:177 LL1 LogManager.java:25 LL(1)? false
