// Generated from c://Users//saule//Desktop//Codigo_Editor//grammar//lexerC.g4 by ANTLR 4.13.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class lexerC extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		APARENTESIS=1, CPARENTESIS=2, ALLAVE=3, CLLAVE=4, EQUALS=5, MUL=6, DIV=7, 
		ADD=8, SUB=9, PRINT=10, IF=11, ELSE=12, WHILE=13, COND_MAT=14, COND_LOG=15, 
		STRING=16, INT=17, ID=18, FLOAT=19, SEMI=20, WS=21, LINE_COMMENT=22, BLOCK_COMMENT=23;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"APARENTESIS", "CPARENTESIS", "ALLAVE", "CLLAVE", "EQUALS", "MUL", "DIV", 
			"ADD", "SUB", "PRINT", "IF", "ELSE", "WHILE", "COND_MAT", "COND_LOG", 
			"STRING", "INT", "ID", "FLOAT", "SEMI", "WS", "LINE_COMMENT", "BLOCK_COMMENT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'('", "')'", "'{'", "'}'", "'='", "'*'", "'/'", "'+'", "'-'", 
			"'printf'", "'if'", "'else'", "'while'", null, null, null, null, null, 
			null, "';'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "APARENTESIS", "CPARENTESIS", "ALLAVE", "CLLAVE", "EQUALS", "MUL", 
			"DIV", "ADD", "SUB", "PRINT", "IF", "ELSE", "WHILE", "COND_MAT", "COND_LOG", 
			"STRING", "INT", "ID", "FLOAT", "SEMI", "WS", "LINE_COMMENT", "BLOCK_COMMENT"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public lexerC(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "lexerC.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0017\u00c7\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0001\u0000\u0001\u0000"+
		"\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003"+
		"\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006"+
		"\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001"+
		"\t\u0001\t\u0001\t\u0001\t\u0001\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b"+
		"\u0001\u000b\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\f\u0001\f\u0001"+
		"\f\u0001\f\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0003\r\\\b\r\u0001"+
		"\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001"+
		"\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001"+
		"\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001"+
		"\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001"+
		"\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0003\u000ez\b\u000e\u0001"+
		"\u000f\u0001\u000f\u0005\u000f~\b\u000f\n\u000f\f\u000f\u0081\t\u000f"+
		"\u0001\u000f\u0001\u000f\u0001\u0010\u0003\u0010\u0086\b\u0010\u0001\u0010"+
		"\u0004\u0010\u0089\b\u0010\u000b\u0010\f\u0010\u008a\u0001\u0011\u0004"+
		"\u0011\u008e\b\u0011\u000b\u0011\f\u0011\u008f\u0001\u0011\u0005\u0011"+
		"\u0093\b\u0011\n\u0011\f\u0011\u0096\t\u0011\u0001\u0012\u0003\u0012\u0099"+
		"\b\u0012\u0001\u0012\u0004\u0012\u009c\b\u0012\u000b\u0012\f\u0012\u009d"+
		"\u0001\u0012\u0001\u0012\u0004\u0012\u00a2\b\u0012\u000b\u0012\f\u0012"+
		"\u00a3\u0001\u0013\u0001\u0013\u0001\u0014\u0004\u0014\u00a9\b\u0014\u000b"+
		"\u0014\f\u0014\u00aa\u0001\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001"+
		"\u0015\u0001\u0015\u0005\u0015\u00b3\b\u0015\n\u0015\f\u0015\u00b6\t\u0015"+
		"\u0001\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u0016"+
		"\u0005\u0016\u00be\b\u0016\n\u0016\f\u0016\u00c1\t\u0016\u0001\u0016\u0001"+
		"\u0016\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u00bf\u0000\u0017\u0001"+
		"\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007"+
		"\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d"+
		"\u000f\u001f\u0010!\u0011#\u0012%\u0013\'\u0014)\u0015+\u0016-\u0017\u0001"+
		"\u0000\b\u0002\u0000<<>>\u0001\u0000\"\"\u0001\u000009\u0002\u0000AZa"+
		"z\u0003\u000009AZaz\u0001\u0000..\u0003\u0000\t\n\r\r  \u0002\u0000\n"+
		"\n\r\r\u00da\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000"+
		"\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000"+
		"\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000"+
		"\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000"+
		"\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000"+
		"\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000"+
		"\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000"+
		"\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000"+
		"\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%"+
		"\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001"+
		"\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000"+
		"\u0000\u0001/\u0001\u0000\u0000\u0000\u00031\u0001\u0000\u0000\u0000\u0005"+
		"3\u0001\u0000\u0000\u0000\u00075\u0001\u0000\u0000\u0000\t7\u0001\u0000"+
		"\u0000\u0000\u000b9\u0001\u0000\u0000\u0000\r;\u0001\u0000\u0000\u0000"+
		"\u000f=\u0001\u0000\u0000\u0000\u0011?\u0001\u0000\u0000\u0000\u0013A"+
		"\u0001\u0000\u0000\u0000\u0015H\u0001\u0000\u0000\u0000\u0017K\u0001\u0000"+
		"\u0000\u0000\u0019P\u0001\u0000\u0000\u0000\u001b[\u0001\u0000\u0000\u0000"+
		"\u001dy\u0001\u0000\u0000\u0000\u001f{\u0001\u0000\u0000\u0000!\u0085"+
		"\u0001\u0000\u0000\u0000#\u008d\u0001\u0000\u0000\u0000%\u0098\u0001\u0000"+
		"\u0000\u0000\'\u00a5\u0001\u0000\u0000\u0000)\u00a8\u0001\u0000\u0000"+
		"\u0000+\u00ae\u0001\u0000\u0000\u0000-\u00b9\u0001\u0000\u0000\u0000/"+
		"0\u0005(\u0000\u00000\u0002\u0001\u0000\u0000\u000012\u0005)\u0000\u0000"+
		"2\u0004\u0001\u0000\u0000\u000034\u0005{\u0000\u00004\u0006\u0001\u0000"+
		"\u0000\u000056\u0005}\u0000\u00006\b\u0001\u0000\u0000\u000078\u0005="+
		"\u0000\u00008\n\u0001\u0000\u0000\u00009:\u0005*\u0000\u0000:\f\u0001"+
		"\u0000\u0000\u0000;<\u0005/\u0000\u0000<\u000e\u0001\u0000\u0000\u0000"+
		"=>\u0005+\u0000\u0000>\u0010\u0001\u0000\u0000\u0000?@\u0005-\u0000\u0000"+
		"@\u0012\u0001\u0000\u0000\u0000AB\u0005p\u0000\u0000BC\u0005r\u0000\u0000"+
		"CD\u0005i\u0000\u0000DE\u0005n\u0000\u0000EF\u0005t\u0000\u0000FG\u0005"+
		"f\u0000\u0000G\u0014\u0001\u0000\u0000\u0000HI\u0005i\u0000\u0000IJ\u0005"+
		"f\u0000\u0000J\u0016\u0001\u0000\u0000\u0000KL\u0005e\u0000\u0000LM\u0005"+
		"l\u0000\u0000MN\u0005s\u0000\u0000NO\u0005e\u0000\u0000O\u0018\u0001\u0000"+
		"\u0000\u0000PQ\u0005w\u0000\u0000QR\u0005h\u0000\u0000RS\u0005i\u0000"+
		"\u0000ST\u0005l\u0000\u0000TU\u0005e\u0000\u0000U\u001a\u0001\u0000\u0000"+
		"\u0000V\\\u0007\u0000\u0000\u0000WX\u0005<\u0000\u0000X\\\u0005=\u0000"+
		"\u0000YZ\u0005>\u0000\u0000Z\\\u0005=\u0000\u0000[V\u0001\u0000\u0000"+
		"\u0000[W\u0001\u0000\u0000\u0000[Y\u0001\u0000\u0000\u0000\\\u001c\u0001"+
		"\u0000\u0000\u0000]^\u0005=\u0000\u0000^z\u0005=\u0000\u0000_`\u0005!"+
		"\u0000\u0000`z\u0005=\u0000\u0000ab\u0005t\u0000\u0000bc\u0005r\u0000"+
		"\u0000cd\u0005u\u0000\u0000dz\u0005e\u0000\u0000ef\u0005f\u0000\u0000"+
		"fg\u0005a\u0000\u0000gh\u0005l\u0000\u0000hi\u0005s\u0000\u0000iz\u0005"+
		"e\u0000\u0000jk\u0005&\u0000\u0000kz\u0005&\u0000\u0000lm\u0005|\u0000"+
		"\u0000mz\u0005|\u0000\u0000no\u0005!\u0000\u0000op\u0005t\u0000\u0000"+
		"pq\u0005r\u0000\u0000qr\u0005u\u0000\u0000rz\u0005e\u0000\u0000st\u0005"+
		"!\u0000\u0000tu\u0005f\u0000\u0000uv\u0005a\u0000\u0000vw\u0005l\u0000"+
		"\u0000wx\u0005s\u0000\u0000xz\u0005e\u0000\u0000y]\u0001\u0000\u0000\u0000"+
		"y_\u0001\u0000\u0000\u0000ya\u0001\u0000\u0000\u0000ye\u0001\u0000\u0000"+
		"\u0000yj\u0001\u0000\u0000\u0000yl\u0001\u0000\u0000\u0000yn\u0001\u0000"+
		"\u0000\u0000ys\u0001\u0000\u0000\u0000z\u001e\u0001\u0000\u0000\u0000"+
		"{\u007f\u0005\"\u0000\u0000|~\b\u0001\u0000\u0000}|\u0001\u0000\u0000"+
		"\u0000~\u0081\u0001\u0000\u0000\u0000\u007f}\u0001\u0000\u0000\u0000\u007f"+
		"\u0080\u0001\u0000\u0000\u0000\u0080\u0082\u0001\u0000\u0000\u0000\u0081"+
		"\u007f\u0001\u0000\u0000\u0000\u0082\u0083\u0005\"\u0000\u0000\u0083 "+
		"\u0001\u0000\u0000\u0000\u0084\u0086\u0005-\u0000\u0000\u0085\u0084\u0001"+
		"\u0000\u0000\u0000\u0085\u0086\u0001\u0000\u0000\u0000\u0086\u0088\u0001"+
		"\u0000\u0000\u0000\u0087\u0089\u0007\u0002\u0000\u0000\u0088\u0087\u0001"+
		"\u0000\u0000\u0000\u0089\u008a\u0001\u0000\u0000\u0000\u008a\u0088\u0001"+
		"\u0000\u0000\u0000\u008a\u008b\u0001\u0000\u0000\u0000\u008b\"\u0001\u0000"+
		"\u0000\u0000\u008c\u008e\u0007\u0003\u0000\u0000\u008d\u008c\u0001\u0000"+
		"\u0000\u0000\u008e\u008f\u0001\u0000\u0000\u0000\u008f\u008d\u0001\u0000"+
		"\u0000\u0000\u008f\u0090\u0001\u0000\u0000\u0000\u0090\u0094\u0001\u0000"+
		"\u0000\u0000\u0091\u0093\u0007\u0004\u0000\u0000\u0092\u0091\u0001\u0000"+
		"\u0000\u0000\u0093\u0096\u0001\u0000\u0000\u0000\u0094\u0092\u0001\u0000"+
		"\u0000\u0000\u0094\u0095\u0001\u0000\u0000\u0000\u0095$\u0001\u0000\u0000"+
		"\u0000\u0096\u0094\u0001\u0000\u0000\u0000\u0097\u0099\u0005-\u0000\u0000"+
		"\u0098\u0097\u0001\u0000\u0000\u0000\u0098\u0099\u0001\u0000\u0000\u0000"+
		"\u0099\u009b\u0001\u0000\u0000\u0000\u009a\u009c\u0007\u0002\u0000\u0000"+
		"\u009b\u009a\u0001\u0000\u0000\u0000\u009c\u009d\u0001\u0000\u0000\u0000"+
		"\u009d\u009b\u0001\u0000\u0000\u0000\u009d\u009e\u0001\u0000\u0000\u0000"+
		"\u009e\u009f\u0001\u0000\u0000\u0000\u009f\u00a1\u0007\u0005\u0000\u0000"+
		"\u00a0\u00a2\u0007\u0002\u0000\u0000\u00a1\u00a0\u0001\u0000\u0000\u0000"+
		"\u00a2\u00a3\u0001\u0000\u0000\u0000\u00a3\u00a1\u0001\u0000\u0000\u0000"+
		"\u00a3\u00a4\u0001\u0000\u0000\u0000\u00a4&\u0001\u0000\u0000\u0000\u00a5"+
		"\u00a6\u0005;\u0000\u0000\u00a6(\u0001\u0000\u0000\u0000\u00a7\u00a9\u0007"+
		"\u0006\u0000\u0000\u00a8\u00a7\u0001\u0000\u0000\u0000\u00a9\u00aa\u0001"+
		"\u0000\u0000\u0000\u00aa\u00a8\u0001\u0000\u0000\u0000\u00aa\u00ab\u0001"+
		"\u0000\u0000\u0000\u00ab\u00ac\u0001\u0000\u0000\u0000\u00ac\u00ad\u0006"+
		"\u0014\u0000\u0000\u00ad*\u0001\u0000\u0000\u0000\u00ae\u00af\u0005/\u0000"+
		"\u0000\u00af\u00b0\u0005/\u0000\u0000\u00b0\u00b4\u0001\u0000\u0000\u0000"+
		"\u00b1\u00b3\b\u0007\u0000\u0000\u00b2\u00b1\u0001\u0000\u0000\u0000\u00b3"+
		"\u00b6\u0001\u0000\u0000\u0000\u00b4\u00b2\u0001\u0000\u0000\u0000\u00b4"+
		"\u00b5\u0001\u0000\u0000\u0000\u00b5\u00b7\u0001\u0000\u0000\u0000\u00b6"+
		"\u00b4\u0001\u0000\u0000\u0000\u00b7\u00b8\u0006\u0015\u0000\u0000\u00b8"+
		",\u0001\u0000\u0000\u0000\u00b9\u00ba\u0005/\u0000\u0000\u00ba\u00bb\u0005"+
		"*\u0000\u0000\u00bb\u00bf\u0001\u0000\u0000\u0000\u00bc\u00be\t\u0000"+
		"\u0000\u0000\u00bd\u00bc\u0001\u0000\u0000\u0000\u00be\u00c1\u0001\u0000"+
		"\u0000\u0000\u00bf\u00c0\u0001\u0000\u0000\u0000\u00bf\u00bd\u0001\u0000"+
		"\u0000\u0000\u00c0\u00c2\u0001\u0000\u0000\u0000\u00c1\u00bf\u0001\u0000"+
		"\u0000\u0000\u00c2\u00c3\u0005*\u0000\u0000\u00c3\u00c4\u0005/\u0000\u0000"+
		"\u00c4\u00c5\u0001\u0000\u0000\u0000\u00c5\u00c6\u0006\u0016\u0000\u0000"+
		"\u00c6.\u0001\u0000\u0000\u0000\u000e\u0000[y\u007f\u0085\u008a\u008f"+
		"\u0094\u0098\u009d\u00a3\u00aa\u00b4\u00bf\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}