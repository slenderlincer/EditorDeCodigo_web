2024-02-13 11:49:47:738 grammar LogManager.java:25 before: (COMBINED_GRAMMAR CodeFile (RULES (RULE start (BLOCK (ALT INSERT CODE '{' CONTENT (? (BLOCK (ALT NEWLINE))) '}'))) (RULE INSERT (BLOCK (ALT 'iniciar'))) (RULE CODE (BLOCK (ALT 'codigo'))) (RULE CONTENT (BLOCK (ALT (+ (BLOCK (ALT [a-zA-Z])))))) (RULE NEWLINE (BLOCK (ALT (? (BLOCK (ALT '\r'))) '\n'))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t])))) skip)))))
2024-02-13 11:49:47:749 grammar LogManager.java:25 after: (COMBINED_GRAMMAR CodeFile (RULES (RULE start (BLOCK (ALT INSERT CODE '{' CONTENT (? (BLOCK (ALT NEWLINE))) '}'))) (RULE INSERT (BLOCK (ALT 'iniciar'))) (RULE CODE (BLOCK (ALT 'codigo'))) (RULE CONTENT (BLOCK (ALT (+ (BLOCK (ALT [a-zA-Z])))))) (RULE NEWLINE (BLOCK (ALT (? (BLOCK (ALT '\r'))) '\n'))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t])))) skip)))))
2024-02-13 11:49:47:774 grammar LogManager.java:25 after extract implicit lexer =(COMBINED_GRAMMAR CodeFile (RULES (RULE start (BLOCK (ALT INSERT CODE '{' CONTENT (? (BLOCK (ALT NEWLINE))) '}')))))
2024-02-13 11:49:47:774 grammar LogManager.java:25 lexer =(LEXER_GRAMMAR CodeFileLexer (RULES (RULE T__0 (BLOCK (ALT '{'))) (RULE T__1 (BLOCK (ALT '}'))) (RULE INSERT (BLOCK (ALT 'iniciar'))) (RULE CODE (BLOCK (ALT 'codigo'))) (RULE CONTENT (BLOCK (ALT (+ (BLOCK (ALT [a-zA-Z])))))) (RULE NEWLINE (BLOCK (ALT (? (BLOCK (ALT '\r'))) '\n'))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t])))) skip)))))
2024-02-13 11:49:48:276 semantics LogManager.java:25 tokens={EOF=-1, T__0=1, T__1=2, INSERT=3, CODE=4, CONTENT=5, NEWLINE=6, WS=7}
2024-02-13 11:49:48:276 semantics LogManager.java:25 strings={'{'=1, '}'=2, 'iniciar'=3, 'codigo'=4}
2024-02-13 11:49:48:286 LL1 LogManager.java:25 
DECISION 0 in rule start
2024-02-13 11:49:48:288 LL1 LogManager.java:25 look=[6, 2]
2024-02-13 11:49:48:288 LL1 LogManager.java:25 LL(1)? true
